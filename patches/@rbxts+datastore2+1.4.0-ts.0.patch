diff --git a/node_modules/@rbxts/datastore2/src/DataStoreServiceRetriever.lua b/node_modules/@rbxts/datastore2/src/DataStoreServiceRetriever.lua
index 67a43a8..bde126f 100644
--- a/node_modules/@rbxts/datastore2/src/DataStoreServiceRetriever.lua
+++ b/node_modules/@rbxts/datastore2/src/DataStoreServiceRetriever.lua
@@ -1,5 +1,13 @@
--- This function is monkey patched to return MockDataStoreService during tests
-local DataStoreService = game:GetService("DataStoreService")
+local IsInStudio = game:GetService("RunService"):IsStudio()
+local IsMocking = game:GetService("ServerStorage"):WaitForChild("UseMockDataStore").Value;
+
+local DataStoreService;
+
+if (IsInStudio and IsMocking) then
+	DataStoreService = require(game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("mockdatastoreservice"):WaitForChild("out"));
+else
+	DataStoreService = game:GetService("DataStoreService");
+end
 
 local DataStoreServiceRetriever = {}
 
diff --git a/node_modules/@rbxts/datastore2/src/IsPlayer.lua b/node_modules/@rbxts/datastore2/src/IsPlayer.lua
index d6fddee..5c2cce3 100644
--- a/node_modules/@rbxts/datastore2/src/IsPlayer.lua
+++ b/node_modules/@rbxts/datastore2/src/IsPlayer.lua
@@ -2,7 +2,7 @@
 local IsPlayer = {}
 
 function IsPlayer.Check(object)
-	return typeof(object) == "Instance" and object.ClassName == "Player"
+	return object.ClassName == "Player"
 end
 
 return IsPlayer
